from aiogram import Bot
from aiogram.types import CallbackQuery, Message
from aiogram.exceptions import TelegramBadRequest
from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardMarkup

from database.requests import RegistrationRequests
from utils.workouts_types import workout_types


async def check_workouts(message: Message):
    """
    –û–±—Ä–∞–±—Ä—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /check_walks

    –ó–∞–ø—É—Å–∫–∞–µ —Ç —Å—Ü–µ–Ω–∞—Ä–∏–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏—Å—É—Ç–≤–∏—è –ª—é–¥–µ–π –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö.
    """
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:', reply_markup=await moderate_workout_kb())


async def moderate_workout_kb() -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
    """
    moderate_workout_kb_builder = InlineKeyboardBuilder()

    last_week_workouts = await RegistrationRequests.get_last_week_workouts(7)

    for workout, workout_type in last_week_workouts:
        date = (workout.date.strftime('%d.%m | %H:%M')
                .replace('08:30', '08:30‚òÄ')
                .replace('20:30', '20:30üåì'))
        workout_type = workout_type.type_name
        workout_id = str(workout.workout_id)

        moderate_workout_kb_builder.button(text=f'{date} | {workout_type}',
                                           callback_data=f'check_{workout_id}')

    moderate_workout_kb_builder.adjust(1)
    return moderate_workout_kb_builder.as_markup()


async def check_workout_kb_handler(call: CallbackQuery, bot: Bot):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç moderate_workout_kb

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –§–ò/username –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π user_status_change_kb
    """
    workout_id = int(call.data.split('_')[1])
    users = await RegistrationRequests.get_workout_username_and_id(workout_id)
    await call.answer('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞–≤—à–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤')
    for user_and_workout_info in users:
        date = user_and_workout_info.date.strftime('%d.%m | %H:%M').replace('08:30', '08:30‚òÄ').replace('20:30', '20:30üåì')
        text = (f'{user_and_workout_info.name}\n'
                f'{date} | {user_and_workout_info.type_name} #{workout_id}')
        try:  # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –µ—Å–ª–∏ –Ω–µ—Ç –∞–≤–∞—Ç–∞—Ä–∫–∏
            file = await bot.get_user_profile_photos(user_and_workout_info.user_id)
        except TelegramBadRequest as e:
            print(e)
            await call.message.answer(text, reply_markup=await user_status_change_kb(user_and_workout_info.user_id))
            continue

        photo = file.photos[0][0].file_id
        await call.message.answer_photo(photo, caption=text, reply_markup=await user_status_change_kb(user_and_workout_info.user_id))


async def user_status_change_kb(user_id) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞

    –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–Ω–æ–ø–∫–∏: –±—ã–ª/–Ω–µ –±—ã–ª
    """
    status_kb = InlineKeyboardBuilder()

    status_kb.button(text='–ë—ã–ª ‚úÖ', callback_data=f'stat_y_{user_id}')
    status_kb.button(text='–ù–µ –±—ã–ª ‚ùå', callback_data=f'stat_n_{user_id}')

    status_kb.adjust(2)
    return status_kb.as_markup()


async def user_status_change_kb_handler(call: CallbackQuery, bot: Bot):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Ç–∞ –∑–∞–ø–∏—Å–∏ –ø–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    –ò–∑–º–µ–Ω—è–µ—Ç –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ Registration
    """
    user_id = int(call.data.split('_')[-1])
    status_code = call.data.split('_')[1]

    message_id = call.message.message_id
    chat_id = call.message.chat.id

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∑–∞–≤–∏—Å—è—â–∞—è –æ—Ç –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏
    status = 5  # –Ω–µ –ø–æ—Å–µ—Ç–∏–ª
    adding_text = '- –ù–µ –±—ã–ª ‚ùå'
    if status_code == 'y':
        status = 2  # –ø–æ—Å–µ—Ç–∏–ª
        adding_text = '- –ë—ã–ª ‚úÖ'

    if call.message.caption:
        workout_id = int(call.message.caption.split('#')[-1])
        text = call.message.caption.split('#')[0]
        await bot.edit_message_caption(message_id=message_id, chat_id=chat_id, caption=f'{text.strip()} {adding_text}')
    else:
        workout_id = int(call.message.text.split('#')[-1])
        text = call.message.text.split('#')[0]
        await bot.edit_message_text(message_id=message_id, chat_id=chat_id, text=f'{text.strip()} {adding_text}')

    result = await RegistrationRequests.update_user_status(workout_id, user_id, status)
    if result:
        await call.answer('–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω')


